{"version":3,"sources":["enum.js","components/Table/index.js","components/TablesWrapper/index.js","App.js","serviceWorker.js","index.js"],"names":["enumPoker","Object","freeze","cardsName","positions","adequatePositionsOrder9","adequatePositionsOrder6","adequatePositionsOrder3","adequateHaPreflopPositionsOrder","actionsType","streets","allHandsCount","gameTypesSettings","heroChair","playersCount","hashSum","cardsValues","cardsSuits","cardsSuitsName","cardsSuitsCode","Table","getColor","isAgro","isFold","getBgColor","checked","getMoveType","wasBet","isMaxAgro","invest","this","props","prompt","handPrompt","position","debug_mode","players","pot","heroCards","board","isHeroTurn","move_id","handNumber","debug_hand","debug_aggregatorLock","debug_move","strategy","hand_move_id","hand_handNumber","prevHeroAmountAtCurStreet","maxAmount","isPromptRelevant","maxRegret","keys","reduce","max","move","ev","movesList","listKeys","sort","a","b","sum","key","Math","abs","map","isMax","moveType","toFixed","probab","amount","componentStyle","color","fontSize","backgroundColor","style","className","nickname","balance","isDealer","bet","agroClass","indexOf","suit","toUpperCase","hole1Suit","hole1Value","hole2Suit","hole2Value","Component","TablesWrapper","state","table0","table1","table2","table3","hand0","hand1","hand2","hand3","token","server1","server2","isConnected","isPaused","startListener","ioClient","io","timeout","pingTimeout","emit","on","console","log","setState","localStorage","setItem","data","id","hand_prompt","hand","aggregatorLock","aggregatorFree","sessionsQueue","tasksSimulationsQueue","prevState","tokenHandler","e","target","value","srv1Handler","srv2Handler","connectHandler","pauseHandler","disconnectHandler","disconnect","getItem","debug_info","placeholder","type","defaultValue","onChange","onClick","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.280bded5.chunk.js","sourcesContent":["export const enumPoker = Object.freeze({\r\n    cardsName: [\"2h\", \"3h\", \"4h\", \"5h\", \"6h\", \"7h\", \"8h\", \"9h\", \"Th\", \"Jh\", \"Qh\", \"Kh\", \"Ah\", \"2d\", \"3d\", \"4d\", \"5d\", \"6d\", \"7d\", \"8d\", \"9d\", \"Td\", \"Jd\", \"Qd\", \"Kd\", \"Ad\", \"2c\", \"3c\", \"4c\", \"5c\", \"6c\", \"7c\", \"8c\", \"9c\", \"Tc\", \"Jc\", \"Qc\", \"Kc\", \"Ac\", \"2s\", \"3s\", \"4s\", \"5s\", \"6s\", \"7s\", \"8s\", \"9s\", \"Ts\", \"Js\", \"Qs\", \"Ks\", \"As\"],\r\n    positions: [\"BTN\", \"CO\", \"MP3\", \"MP2\", \"MP1\", \"UTG2\", \"UTG1\", \"UTG0\", \"BB\", \"SB\"],\r\n    adequatePositionsOrder9: [\"SB\", \"BB\", \"UTG1\", \"UTG2\", \"MP1\", \"MP2\", \"MP3\", \"CO\", \"BTN\"],\r\n    adequatePositionsOrder6: [\"SB\", \"BB\", \"MP2\", \"MP3\", \"CO\", \"BTN\"],\r\n    adequatePositionsOrder3: [\"SB\", \"BB\", \"BTN\"],\r\n    adequateHaPreflopPositionsOrder: [\"BTN\", \"SB\"],\r\n    actionsType: ['post', \"bet\", \"raise\", \"call\", \"check\", \"fold\"],\r\n    streets: [\"preflop\", \"flop\", \"turn\", \"river\"],\r\n    allHandsCount: 1326,\r\n    gameTypesSettings: {\r\n        'Spin&Go': {\r\n            heroChair: 2,\r\n            playersCount: 3,\r\n            hashSum: [7500, 5000, 3750, 2500, 1875, 1500, 1250],\r\n        }\r\n    },\r\n    cardsValues: ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'j', 'q', 'k', 'a'],\r\n    cardsSuits: ['c', 's', 'd', 'h'],\r\n    cardsSuitsName: ['clubs', 'spades', 'diamonds', 'hearts'],\r\n    cardsSuitsCode: ['♣', '♠', '♦', '♥'],\r\n});","// Core\r\nimport React from 'react';\r\nimport { Component } from 'react';\r\n\r\n// Instruments\r\nimport { enumPoker } from '../../enum';\r\n\r\nconst maxDiff = 55;\r\nconst regretDiffMax = 3;\r\n\r\nclass Table extends Component {\r\n\r\n  // shouldComponentUpdate(nextProps, nextState) {\r\n  //\r\n  // }\r\n\r\n  getColor = (isAgro, isFold) => {\r\n    if (isAgro) {\r\n      return `rgb(${255}, 0, 0)`;\r\n    } else if (isFold) {\r\n      return `rgb(${0}, ${0}, ${0})`;\r\n    }\r\n    return `rgb(${255}, ${255}, 0)`;\r\n  };\r\n\r\n  getBgColor = (isAgro, isFold, checked) => {\r\n    if (checked) {\r\n      if (isAgro) {\r\n        return `rgba(245, 120, 120, 0.65)`;\r\n      } else if (isFold) {\r\n        return `rgba(140, 140, 140, 0.65)`;\r\n      }\r\n      return `rgba(170, 170, 0, 0.65)`;\r\n    } else {\r\n      return 'transparent';\r\n    }\r\n  };\r\n\r\n  getMoveType = (isAgro, isFold, wasBet, isMaxAgro, invest) => {\r\n    if (isMaxAgro) { return 'All-in'; }\r\n    if (isAgro) {\r\n      return wasBet ? 'Raise' : 'Bet';\r\n    } else if (isFold) {\r\n      return 'Fold';\r\n    }\r\n    return !!invest ? 'Call' : 'Check';\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      prompt = {},\r\n      handPrompt = {},\r\n      position,\r\n      debug_mode,\r\n    } = this.props;\r\n\r\n    const {\r\n      players = [],\r\n      pot = '',\r\n      heroCards = '',\r\n      board = [],\r\n      isHeroTurn = false,\r\n      move_id,\r\n      handNumber,\r\n      debug_hand = '',\r\n      debug_aggregatorLock = '',\r\n      debug_move = '',\r\n    } = prompt;\r\n\r\n    const {\r\n      strategy = {},\r\n      hand_move_id,\r\n      hand_handNumber,\r\n      wasBet,\r\n      prevHeroAmountAtCurStreet,\r\n      maxAmount,\r\n    } = handPrompt;\r\n\r\n    const isPromptRelevant = move_id === hand_move_id && handNumber === hand_handNumber;\r\n\r\n    const maxRegret = Object.keys(strategy).reduce((max, move) => {\r\n      return +strategy[move].ev > max ? strategy[move].ev : max;\r\n    }, 0);\r\n\r\n    let movesList = [];\r\n    if (isPromptRelevant) {\r\n      const listKeys = Object.keys(strategy).sort((a, b) => +b - +a);\r\n      const maxSizeMoves = listKeys.reduce((sum, key) => Math.abs(maxRegret - strategy[key].ev) <= regretDiffMax ? (sum + 1) : sum, 0);\r\n        movesList = listKeys.map(key => {\r\n        const move = strategy[key];\r\n        const isAgro = +key > 0;\r\n        const isFold = key === '-1';\r\n        const isMax = Math.max(...listKeys) == key && +key > 0;\r\n        const invest = maxAmount - prevHeroAmountAtCurStreet;\r\n        const moveType = this.getMoveType(isAgro, isFold, wasBet, isMax, invest);\r\n        // const probab = Math.round(move.strategy * 100);\r\n        const ev = `${(+move.ev/100).toFixed(2)}`;    // + 'BB'\r\n        const probab = `${(+move.strategy * 100).toFixed(1)}%`;\r\n        // console.log('move', move);\r\n        const amount = isAgro ? (((maxAmount ? (maxAmount + +key) : +key) / 100)) : '';    // + 'BB'\r\n\r\n        const componentStyle = {\r\n          color: this.getColor(isAgro, isFold),\r\n          fontSize: 27,\r\n          backgroundColor: this.getBgColor(isAgro, isFold, move.checked),\r\n        };\r\n\r\n        return <tr key={key} style={componentStyle}>\r\n          <td>{moveType + (isMax ? ' ' : ` ${amount} `)}</td>\r\n          <td className=\"move-ev\">{ev}</td>\r\n          <td className=\"move-ev\"><span className='move-probab'>{probab}</span></td>\r\n        </tr>\r\n      });\r\n    }\r\n\r\n    return (\r\n        <div className={`main-container spins party-poker ${position}`}>\r\n          {players[0] && <div className=\"player player0\">\r\n            <div className=\"nickname\">{players[0].nickname} <span\r\n                className=\"balance\">{players[0].balance} BB</span></div>\r\n            {players[0].isDealer ? <div className=\"dealer\"><span>D</span></div> : null}\r\n            {players[0].bet ? <div className={'amount ' + players[0].agroClass}>{players[0].bet} BB</div> : null}\r\n          </div>}\r\n          {players[1] && <div className=\"player player1\">\r\n            <div className=\"nickname\">{players[1].nickname} <span\r\n                className=\"balance\">{players[1].balance} BB</span></div>\r\n            {players[1].isDealer ? <div className=\"dealer\"><span>D</span></div> : null}\r\n            {players[1].bet ? <div className={'amount ' + players[1].agroClass}>{players[1].bet} BB</div> : null}\r\n          </div>}\r\n          {players[2] && <div className=\"player player2\">\r\n            <div className=\"nickname\">{players[2].nickname} <span\r\n                className=\"balance\">{players[2].balance} BB</span></div>\r\n            {players[2].isDealer ? <div className=\"dealer\"><span>D</span></div> : null}\r\n            {players[2].bet ? <div className={'amount ' + players[2].agroClass}>{players[2].bet} BB</div> : null}\r\n          </div>}\r\n          <div className=\"board\">\r\n            <div className=\"pot\">{pot ? `Pot: ${pot} BB` : ''}</div>\r\n            <div className={`cards ${board[0] ? enumPoker.cardsSuitsName[enumPoker.cardsSuits.indexOf(board[0].suit)] : ''}`}>\r\n              <div className=\"value\">{board[0] ? board[0]['value'].toUpperCase() : ''}</div>\r\n              <div className=\"suit\">{board[0] ? enumPoker.cardsSuitsCode[enumPoker.cardsSuits.indexOf(board[0].suit)] : ''}</div>\r\n            </div>\r\n            <div className={`cards ${board[1] ? enumPoker.cardsSuitsName[enumPoker.cardsSuits.indexOf(board[1].suit)] : ''}`}>\r\n              <div className=\"value\">{board[1] ? board[1]['value'].toUpperCase() : ''}</div>\r\n              <div className=\"suit\">{board[1] ? enumPoker.cardsSuitsCode[enumPoker.cardsSuits.indexOf(board[1].suit)] : ''}</div>\r\n            </div>\r\n            <div className={`cards ${board[2] ? enumPoker.cardsSuitsName[enumPoker.cardsSuits.indexOf(board[2].suit)] : ''}`}>\r\n              <div className=\"value\">{board[2] ? board[2]['value'].toUpperCase() : ''}</div>\r\n              <div className=\"suit\">{board[2] ? enumPoker.cardsSuitsCode[enumPoker.cardsSuits.indexOf(board[2].suit)] : ''}</div>\r\n            </div>\r\n            <div className={`cards ${board[3] ? enumPoker.cardsSuitsName[enumPoker.cardsSuits.indexOf(board[3].suit)] : ''}`}>\r\n              <div className=\"value\">{board[3] ? board[3]['value'].toUpperCase() : ''}</div>\r\n              <div className=\"suit\">{board[3] ? enumPoker.cardsSuitsCode[enumPoker.cardsSuits.indexOf(board[3].suit)] : ''}</div>\r\n            </div>\r\n            <div className={`cards ${board[4] ? enumPoker.cardsSuitsName[enumPoker.cardsSuits.indexOf(board[4].suit)] : ''}`}>\r\n              <div className=\"value\">{board[4] ? board[4]['value'].toUpperCase() : ''}</div>\r\n              <div className=\"suit\">{board[4] ? enumPoker.cardsSuitsCode[enumPoker.cardsSuits.indexOf(board[4].suit)] : ''}</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"hero-hand\">\r\n            <div className={`cards ${heroCards ? enumPoker.cardsSuitsName[enumPoker.cardsSuits.indexOf(heroCards.hole1Suit)] : ''}`}>\r\n              <div className=\"value\">{heroCards ? heroCards.hole1Value.toUpperCase() : ''}</div>\r\n              <div className=\"suit\">{heroCards ? enumPoker.cardsSuitsCode[enumPoker.cardsSuits.indexOf(heroCards.hole1Suit)] : ''}</div>\r\n            </div>\r\n            <div className={`cards ${heroCards ? enumPoker.cardsSuitsName[enumPoker.cardsSuits.indexOf(heroCards.hole2Suit)] : ''}`}>\r\n              <div className=\"value\">{heroCards ? heroCards.hole2Value.toUpperCase() : ''}</div>\r\n              <div className=\"suit\">{heroCards ? enumPoker.cardsSuitsCode[enumPoker.cardsSuits.indexOf(heroCards.hole2Suit)] : ''}</div>\r\n            </div>\r\n          </div>\r\n          {isPromptRelevant &&\r\n            <div className=\"prompt\">\r\n              {/*<ul className=\"prompt-moves\">{ isPromptRelevant ? [] : movesList }</ul>*/}\r\n              <table className=\"prompt-moves\">\r\n                <tbody>\r\n                  {/*{isPromptRelevant &&*/}\r\n                    {/*<tr>*/}\r\n                      {/*<th>move</th>*/}\r\n                      {/*<th>strategy</th>*/}\r\n                      {/*<th>ev</th>*/}\r\n                    {/*</tr>*/}\r\n                  {/*}*/}\r\n                  { movesList }\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          }\r\n          {isHeroTurn &&\r\n            <div className='hero-buttons'>\r\n              <div className='button-fold'></div>\r\n              <div className='button-call'></div>\r\n              <div className='button-raise'></div>\r\n            </div>\r\n          }\r\n          {debug_mode &&\r\n            <div className='debugTable'>\r\n              <div>{'hand: ' + debug_hand}</div>\r\n              <div className={`debug-info-str ` + (debug_aggregatorLock ? 'true' : '')}>{'aggregatorLock: ' + debug_aggregatorLock}</div>\r\n              <div className={`debug-info-str ` + (debug_move ? 'true' : '')}>{'move: ' + debug_move}</div>\r\n            </div>\r\n          }\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Table;\r\n\r\n","// Core\r\nimport React, { Component } from 'react';\r\nimport io from 'socket.io-client';\r\n\r\n// Components\r\nimport Table from '../Table';\r\n\r\n// Instruments\r\nimport './style.scss';\r\n\r\n// const url = \"http://localhost:27990\";\r\n// const url = \"http://212.22.223.151:27990\"; // mephisto\r\n// const url = \"http://212.22.223.151:27991\"; // lucifer\r\n\r\n// const token = 'uidfksicnm730pdemg662oermfyf75jdf9djf';  // simulator/debug\r\n\r\nconst debug_mode = false;\r\n\r\n\r\nclass TablesWrapper extends Component {\r\n  state = {\r\n    table0: {},\r\n    table1: {},\r\n    table2: {},\r\n    table3: {},\r\n    hand0: {},\r\n    hand1: {},\r\n    hand2: {},\r\n    hand3: {},\r\n    token: '',\r\n    server1: '',\r\n    server2: '',\r\n    isConnected: false,\r\n    isPaused: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    const server1 = localStorage.getItem('server1');\r\n    const server2 = localStorage.getItem('server2');\r\n\r\n    console.log('server2');\r\n    console.log(server2);\r\n\r\n    this.setState({\r\n      token: token || '',\r\n      server1: server1 || '',\r\n      server2: server2 || '',\r\n    });\r\n  }\r\n\r\n  startListener = () => {\r\n    const {\r\n      token,\r\n      server1,\r\n      server2,\r\n    } = this.state;\r\n\r\n    const ioClient = io(server1, {\r\n      timeout: 60000,       // debug mode with huge freeze timeout\r\n      pingTimeout: 60000,\r\n      // reconnection: true,\r\n      // reconnectionDelay: 1500,\r\n      // reconnectionAttempts: Infinity,\r\n    });\r\n\r\n    // authorization\r\n    ioClient.emit('authorization', token);\r\n\r\n    ioClient.on('authorizationSuccess', () => {\r\n      console.log('authorization success: client');\r\n\r\n      this.setState({\r\n        isConnected: true,\r\n        isPaused: false,\r\n        ioClient,\r\n      });\r\n\r\n      localStorage.setItem('token', token);\r\n      localStorage.setItem('server1', server1);\r\n      localStorage.setItem('server2', server2 || '');\r\n\r\n      ioClient.emit('startPromptSending');\r\n    });\r\n\r\n    ioClient.on(\"prompt\", data => {\r\n      console.log(data.prompt);\r\n      this.setState({\r\n        ['table' + data.id]: data.prompt,\r\n      });\r\n    });\r\n\r\n    ioClient.on(\"hand_prompt\", data => {\r\n      console.log(data);\r\n      this.setState({\r\n        ['hand' + data.id]: data.hand_prompt,\r\n      });\r\n    });\r\n\r\n    ioClient.on(\"debugInfo\", data => {\r\n      console.log(data);\r\n      const {\r\n        id,\r\n        hand,\r\n        aggregatorLock,\r\n        move,\r\n        aggregatorFree,\r\n        sessionsQueue,\r\n        tasksSimulationsQueue,\r\n      } = data;\r\n      this.setState(prevState => {\r\n        return {\r\n          ['table' + id]: {\r\n            ...prevState['table' + id],\r\n            debug_hand: hand,\r\n            debug_aggregatorLock: aggregatorLock,\r\n            debug_move: move,\r\n          },\r\n          debug_info: {\r\n            aggregatorFree,\r\n            sessionsQueue,\r\n            tasksSimulationsQueue,\r\n          }\r\n        }\r\n      });\r\n    });\r\n\r\n    ioClient.on('disconnect', () => {\r\n      console.log('server gone');\r\n\r\n      this.setState({\r\n        isConnected: false\r\n      });\r\n    });\r\n  };\r\n\r\n  tokenHandler = (e) => {\r\n    this.setState({\r\n      token: e.target.value\r\n    })\r\n  };\r\n\r\n  srv1Handler = (e) => {\r\n    this.setState({\r\n      server1: e.target.value\r\n    })\r\n  };\r\n\r\n  srv2Handler = (e) => {\r\n    this.setState({\r\n      server2: e.target.value\r\n    })\r\n  };\r\n\r\n  connectHandler = () => {\r\n    const {\r\n      token,\r\n      server1,\r\n    } = this.state;\r\n\r\n    if (token && server1) {\r\n      this.startListener();\r\n    }\r\n  };\r\n\r\n  pauseHandler = () => {\r\n    this.setState(prevState => {\r\n      return {\r\n        isPaused: prevState.isPaused,\r\n      }\r\n    })\r\n  };\r\n\r\n  disconnectHandler = () => {\r\n    const {\r\n      ioClient,\r\n    } = this.state;\r\n\r\n    this.setState({\r\n      ioClient: null,\r\n      isConnected: false,\r\n      isPaused: false,\r\n    });\r\n\r\n    if (ioClient) {\r\n      ioClient.disconnect();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      table0,\r\n      table1,\r\n      table2,\r\n      table3,\r\n      hand0,\r\n      hand1,\r\n      hand2,\r\n      hand3,\r\n      token,\r\n      server1,\r\n      server2,\r\n      debug_info = {},\r\n      isConnected,\r\n      isPaused,\r\n    } = this.state;\r\n\r\n    const {\r\n      aggregatorFree = true,\r\n      sessionsQueue = '',\r\n      tasksSimulationsQueue = '',\r\n    } = debug_info;\r\n\r\n    // const table0 = !!Object.keys(this.state[\"0\"]).length;\r\n    // const table1 = !!Object.keys(this.state[\"1\"]).length;\r\n    // const table2 = !!Object.keys(this.state[\"2\"]).length;\r\n    // const table3 = !!Object.keys(this.state[\"3\"]).length;\r\n\r\n    return (\r\n        <>\r\n          <Table prompt={table0} handPrompt={hand0} debug_mode={debug_mode} position='left top'/>\r\n          <Table prompt={table1} handPrompt={hand1} debug_mode={debug_mode} position='right top'/>\r\n          <Table prompt={table2} handPrompt={hand2} debug_mode={debug_mode} position='left bottom'/>\r\n          <Table prompt={table3} handPrompt={hand3} debug_mode={debug_mode} position='right bottom'/>\r\n          <span className='logo-footer'>Mephisto - poker artificial intelligence ©</span>\r\n          {debug_mode &&\r\n            <div className=\"debug-info\">\r\n              <div className={`debug-info-str ` + (aggregatorFree ? '' : 'true')}>{'aggregatorFree:' + aggregatorFree}</div>\r\n              <div className={`debug-info-str ` + (sessionsQueue ? 'true' : '')}>{'sessionsQueue:' + sessionsQueue}</div>\r\n              <div className={`debug-info-str ` + (tasksSimulationsQueue ? 'true' : '')}>{'tasksSimulationsQueue:' + tasksSimulationsQueue}</div>\r\n            </div>\r\n          }\r\n\r\n          <div className=\"connection-settings\">\r\n            <input placeholder=\"token\" type=\"text\" defaultValue={token || ''} onChange={this.tokenHandler}/>\r\n            <input placeholder=\"main server\" type=\"text\" defaultValue={server1 || ''} onChange={this.srv1Handler}/>\r\n            <input placeholder=\"reserve server\" type=\"text\" defaultValue={server2 || ''} onChange={this.srv2Handler}/>\r\n\r\n            <div className=\"status-wrapper\">\r\n              <button onClick={this.connectHandler}>connect</button>\r\n              <button onClick={this.disconnectHandler}>disconnect</button>\r\n              <div>{isConnected ? 'online' : 'offline'}</div>\r\n              <div className={isConnected ? 'on' : 'off'}></div>\r\n            </div>\r\n\r\n            {debug_mode &&\r\n              <div className=\"control-wrapper\">\r\n                <button onClick={this.pauseHandler}>{isPaused ? 'play' : 'stop'}</button>\r\n                <div className={isPaused ? 'on' : 'off'}></div>\r\n              </div>\r\n            }\r\n          </div>\r\n        </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TablesWrapper;","// Core\nimport React from 'react';\n\n// Components\nimport TablesWrapper from './components/TablesWrapper';\n\n// Instruments\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className={'app-wrapper'}>\n          <TablesWrapper />\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}