{"version":3,"sources":["enum.js","components/Table/index.js","components/TablesWrapper/index.js","App.js","serviceWorker.js","index.js"],"names":["enumPoker","Object","freeze","cardsName","positions","adequatePositionsOrder9","adequatePositionsOrder6","adequatePositionsOrder3","adequateHaPreflopPositionsOrder","actionsType","streets","allHandsCount","gameTypesSettings","heroChair","playersCount","hashSum","cardsValues","cardsSuits","cardsSuitsName","cardsSuitsCode","Table","this","props","prompt","position","players","pot","heroCards","board","className","nickname","balance","isDealer","bet","agroClass","indexOf","suit","toUpperCase","hole1Suit","hole1Value","hole2Suit","hole2Value","Component","TablesWrapper","state","0","1","2","3","token","server1","server2","isConnected","startListener","ioClient","io","emit","on","console","log","setState","localStorage","setItem","data","id","tokenHandler","e","target","value","srv1Handler","srv2Handler","connectHandler","getItem","keys","length","placeholder","type","defaultValue","onChange","onClick","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.99cd9d1d.chunk.js","sourcesContent":["export const enumPoker = Object.freeze({\r\n    cardsName: [\"2h\", \"3h\", \"4h\", \"5h\", \"6h\", \"7h\", \"8h\", \"9h\", \"Th\", \"Jh\", \"Qh\", \"Kh\", \"Ah\", \"2d\", \"3d\", \"4d\", \"5d\", \"6d\", \"7d\", \"8d\", \"9d\", \"Td\", \"Jd\", \"Qd\", \"Kd\", \"Ad\", \"2c\", \"3c\", \"4c\", \"5c\", \"6c\", \"7c\", \"8c\", \"9c\", \"Tc\", \"Jc\", \"Qc\", \"Kc\", \"Ac\", \"2s\", \"3s\", \"4s\", \"5s\", \"6s\", \"7s\", \"8s\", \"9s\", \"Ts\", \"Js\", \"Qs\", \"Ks\", \"As\"],\r\n    positions: [\"BTN\", \"CO\", \"MP3\", \"MP2\", \"MP1\", \"UTG2\", \"UTG1\", \"UTG0\", \"BB\", \"SB\"],\r\n    adequatePositionsOrder9: [\"SB\", \"BB\", \"UTG1\", \"UTG2\", \"MP1\", \"MP2\", \"MP3\", \"CO\", \"BTN\"],\r\n    adequatePositionsOrder6: [\"SB\", \"BB\", \"MP2\", \"MP3\", \"CO\", \"BTN\"],\r\n    adequatePositionsOrder3: [\"SB\", \"BB\", \"BTN\"],\r\n    adequateHaPreflopPositionsOrder: [\"BTN\", \"SB\"],\r\n    actionsType: ['post', \"bet\", \"raise\", \"call\", \"check\", \"fold\"],\r\n    streets: [\"preflop\", \"flop\", \"turn\", \"river\"],\r\n    allHandsCount: 1326,\r\n    gameTypesSettings: {\r\n        'Spin&Go': {\r\n            heroChair: 2,\r\n            playersCount: 3,\r\n            hashSum: [7500, 5000, 3750, 2500, 1875, 1500, 1250],\r\n        }\r\n    },\r\n    cardsValues: ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'j', 'q', 'k', 'a'],\r\n    cardsSuits: ['c', 's', 'd', 'h'],\r\n    cardsSuitsName: ['clubs', 'spades', 'diamonds', 'hearts'],\r\n    cardsSuitsCode: ['♣', '♠', '♦', '♥'],\r\n});","// Core\r\nimport React, { Component } from 'react';\r\n\r\n// Instruments\r\nimport { enumPoker } from '../../enum';\r\n\r\nclass Table extends Component {\r\n\r\n  render() {\r\n    const {\r\n      prompt = {},\r\n      position,\r\n    } = this.props;\r\n\r\n    const {\r\n      players = [],\r\n      pot = '',\r\n      heroCards = '',\r\n      board = [],\r\n    } = prompt;\r\n\r\n    return (\r\n        <div className={`main-container spins party-poker ${position}`}>\r\n          {players[0] && <div className=\"player player0\">\r\n            <div className=\"nickname\">{players[0].nickname} <span\r\n                className=\"balance\">{players[0].balance} BB</span></div>\r\n            {players[0].isDealer ? <div className=\"dealer\"><span>D</span></div> : null}\r\n            {players[0].bet ? <div className={'amount ' + players[0].agroClass}>{players[0].bet} BB</div> : null}\r\n          </div>}\r\n          {players[1] && <div className=\"player player1\">\r\n            <div className=\"nickname\">{players[1].nickname} <span\r\n                className=\"balance\">{players[1].balance} BB</span></div>\r\n            {players[1].isDealer ? <div className=\"dealer\"><span>D</span></div> : null}\r\n            {players[1].bet ? <div className={'amount ' + players[1].agroClass}>{players[1].bet} BB</div> : null}\r\n          </div>}\r\n          {players[2] && <div className=\"player player2\">\r\n            <div className=\"nickname\">{players[2].nickname} <span\r\n                className=\"balance\">{players[2].balance} BB</span></div>\r\n            {players[2].isDealer ? <div className=\"dealer\"><span>D</span></div> : null}\r\n            {players[2].bet ? <div className={'amount ' + players[2].agroClass}>{players[2].bet} BB</div> : null}\r\n          </div>}\r\n          <div className=\"board\">\r\n            <div className=\"pot\">{pot ? `Pot: ${pot} BB` : ''}</div>\r\n            <div className={`cards ${board[0] ? enumPoker.cardsSuitsName[enumPoker.cardsSuits.indexOf(board[0].suit)] : ''}`}>\r\n              <div className=\"value\">{board[0] ? board[0]['value'].toUpperCase() : ''}</div>\r\n              <div className=\"suit\">{board[0] ? enumPoker.cardsSuitsCode[enumPoker.cardsSuits.indexOf(board[0].suit)] : ''}</div>\r\n            </div>\r\n            <div className={`cards ${board[1] ? enumPoker.cardsSuitsName[enumPoker.cardsSuits.indexOf(board[1].suit)] : ''}`}>\r\n              <div className=\"value\">{board[1] ? board[1]['value'].toUpperCase() : ''}</div>\r\n              <div className=\"suit\">{board[1] ? enumPoker.cardsSuitsCode[enumPoker.cardsSuits.indexOf(board[1].suit)] : ''}</div>\r\n            </div>\r\n            <div className={`cards ${board[2] ? enumPoker.cardsSuitsName[enumPoker.cardsSuits.indexOf(board[2].suit)] : ''}`}>\r\n              <div className=\"value\">{board[2] ? board[2]['value'].toUpperCase() : ''}</div>\r\n              <div className=\"suit\">{board[2] ? enumPoker.cardsSuitsCode[enumPoker.cardsSuits.indexOf(board[2].suit)] : ''}</div>\r\n            </div>\r\n            <div className={`cards ${board[3] ? enumPoker.cardsSuitsName[enumPoker.cardsSuits.indexOf(board[3].suit)] : ''}`}>\r\n              <div className=\"value\">{board[3] ? board[3]['value'].toUpperCase() : ''}</div>\r\n              <div className=\"suit\">{board[3] ? enumPoker.cardsSuitsCode[enumPoker.cardsSuits.indexOf(board[3].suit)] : ''}</div>\r\n            </div>\r\n            <div className={`cards ${board[4] ? enumPoker.cardsSuitsName[enumPoker.cardsSuits.indexOf(board[4].suit)] : ''}`}>\r\n              <div className=\"value\">{board[4] ? board[4]['value'].toUpperCase() : ''}</div>\r\n              <div className=\"suit\">{board[4] ? enumPoker.cardsSuitsCode[enumPoker.cardsSuits.indexOf(board[4].suit)] : ''}</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"hero-hand\">\r\n            <div className={`cards ${heroCards ? enumPoker.cardsSuitsName[enumPoker.cardsSuits.indexOf(heroCards.hole1Suit)] : ''}`}>\r\n              <div className=\"value\">{heroCards ? heroCards.hole1Value.toUpperCase() : ''}</div>\r\n              <div className=\"suit\">{heroCards ? enumPoker.cardsSuitsCode[enumPoker.cardsSuits.indexOf(heroCards.hole1Suit)] : ''}</div>\r\n            </div>\r\n            <div className={`cards ${heroCards ? enumPoker.cardsSuitsName[enumPoker.cardsSuits.indexOf(heroCards.hole2Suit)] : ''}`}>\r\n              <div className=\"value\">{heroCards ? heroCards.hole2Value.toUpperCase() : ''}</div>\r\n              <div className=\"suit\">{heroCards ? enumPoker.cardsSuitsCode[enumPoker.cardsSuits.indexOf(heroCards.hole2Suit)] : ''}</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"prompt\">\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Table;\r\n\r\n","// Core\r\nimport React, { Component } from 'react';\r\nimport io from 'socket.io-client';\r\n\r\n// Components\r\nimport Table from '../Table';\r\n\r\n// Instruments\r\nimport './style.scss';\r\n\r\n// const url = \"http://localhost:27990\";\r\n// const url = \"http://212.22.223.151:27990\"; // mephisto\r\n// const url = \"http://212.22.223.151:27991\"; // lucifer\r\n\r\n// const token = 'uidfksicnm730pdemg662oermfyf75jdf9djf';  // simulator/debug\r\n\r\nclass TablesWrapper extends Component {\r\n  state = {\r\n    0: {},\r\n    1: {},\r\n    2: {},\r\n    3: {},\r\n    token: '',\r\n    server1: '',\r\n    server2: '',\r\n    isConnected: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const token = localStorage.getItem('token');\r\n    const server1 = localStorage.getItem('server1');\r\n    const server2 = localStorage.getItem('server2');\r\n\r\n    console.log('server2');\r\n    console.log(server2);\r\n\r\n    this.setState({\r\n      token: token || '',\r\n      server1: server1 || '',\r\n      server2: server2 || '',\r\n    });\r\n  }\r\n\r\n  startListener = () => {\r\n    const {\r\n      token,\r\n      server1,\r\n      server2,\r\n    } = this.state;\r\n\r\n    const ioClient = io(server1);\r\n\r\n    // authorization\r\n    ioClient.emit('authorization', token);\r\n\r\n    ioClient.on('authorizationSuccess', () => {\r\n      console.log('authorization success: client');\r\n\r\n      this.setState({\r\n        isConnected: true\r\n      });\r\n\r\n      localStorage.setItem('token', token);\r\n      localStorage.setItem('server1', server1);\r\n      localStorage.setItem('server2', server2 || '');\r\n\r\n      ioClient.emit('startPromptSending');\r\n    });\r\n\r\n    ioClient.on(\"prompt\", data => {\r\n      console.log(data);\r\n\r\n      this.setState({\r\n        [data.id]: data.prompt,\r\n      });\r\n    });\r\n\r\n    ioClient.on('disconnect', () => {\r\n      console.log('server gone');\r\n\r\n      this.setState({\r\n        isConnected: false\r\n      });\r\n    });\r\n  };\r\n\r\n  tokenHandler = (e) => {\r\n    this.setState({\r\n      token: e.target.value\r\n    })\r\n  };\r\n\r\n  srv1Handler = (e) => {\r\n    this.setState({\r\n      server1: e.target.value\r\n    })\r\n  };\r\n\r\n  srv2Handler = (e) => {\r\n    this.setState({\r\n      server2: e.target.value\r\n    })\r\n  };\r\n\r\n  connectHandler = () => {\r\n    const {\r\n      token,\r\n      server1,\r\n      server2,\r\n    } = this.state;\r\n\r\n    if (token && server1) {\r\n      this.startListener();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      token,\r\n      server1,\r\n      server2\r\n    } = this.state;\r\n\r\n    const table0 = !!Object.keys(this.state[\"0\"]).length;\r\n    const table1 = !!Object.keys(this.state[\"1\"]).length;\r\n    const table2 = !!Object.keys(this.state[\"2\"]).length;\r\n    const table3 = !!Object.keys(this.state[\"3\"]).length;\r\n\r\n    return (\r\n        <>\r\n          {true && <Table prompt={this.state[\"0\"]} position='left top'/>}\r\n          {true && <Table prompt={this.state[\"1\"]} position='right top'/>}\r\n          {true && <Table prompt={this.state[\"2\"]} position='left bottom'/>}\r\n          {true && <Table prompt={this.state[\"3\"]} position='right bottom'/>}\r\n\r\n          <div className=\"connection-settings\">\r\n            <input placeholder=\"token\" type=\"text\" defaultValue={token || ''} onChange={this.tokenHandler}/>\r\n            <input placeholder=\"main server\" type=\"text\" defaultValue={server1 || ''} onChange={this.srv1Handler}/>\r\n            <input placeholder=\"reserve server\" type=\"text\" defaultValue={server2 || ''} onChange={this.srv2Handler}/>\r\n\r\n            <div className=\"status-wrapper\">\r\n              <button onClick={this.connectHandler}>connect</button>\r\n              <div>{this.state.isConnected ? 'online' : 'offline'}</div>\r\n              <div className={this.state.isConnected ? 'on' : 'off'}></div>\r\n            </div>\r\n          </div>\r\n        </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TablesWrapper;\r\n\r\n","// Core\nimport React from 'react';\n\n// Components\nimport TablesWrapper from './components/TablesWrapper';\n\n// Instruments\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className={'app-wrapper'}>\n          <TablesWrapper />\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}